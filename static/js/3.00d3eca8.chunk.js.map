{"version":3,"sources":["components/Functions/Anagram.tsx"],"names":["Anagram","useState","inputVal","setInputVal","inputVal2","setInputVal2","result","setResult","useEffect","anagram","string1","string2","str1","replace","toLowerCase","split","str2","length","first","filter","i","includes","second","className","type","name","value","onChange","target"],"mappings":"kKA4DeA,UArDC,WAAO,IAAD,EACYC,mBAAiB,UAD7B,mBACbC,EADa,KACHC,EADG,OAEcF,mBAAiB,UAF/B,mBAEbG,EAFa,KAEFC,EAFE,OAGQJ,mBAAiB,UAHzB,mBAGbK,EAHa,KAGLC,EAHK,KAKpBC,qBAAU,WACRC,EAAQP,EAAUE,KACjB,CAACF,EAAUE,IAEd,IAAMK,EAAU,SAACC,EAAiBC,GAChC,IAAMC,EAAsBF,EACzBG,QAAQ,SAAU,IAClBC,cACAC,MAAM,IACHC,EAAsBL,EACzBE,QAAQ,SAAU,IAClBC,cACAC,MAAM,IAET,GAAIH,EAAKK,SAAWD,EAAKC,OAAzB,CAKA,IAAMC,EAAQN,EAAKO,QAAO,SAACC,GAAD,OAAOJ,EAAKK,SAASD,MAAIH,SAAWL,EAAKK,OAC7DK,EAASN,EAAKG,QAAO,SAACC,GAAD,OAAOR,EAAKS,SAASD,MAAIH,SAAWD,EAAKC,OAGhEV,EADJW,GAASI,EACK,oFACA,6GATZf,EAAU,yGAYd,OACE,yBAAKgB,UAAU,WACb,uCACA,2BACEC,KAAK,OACLC,KAAK,QACLC,MAAOxB,EACPyB,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BvB,EAAYuB,MAEnD,2BACEF,KAAK,OACLC,KAAK,SACLC,MAAOtB,EACPuB,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BrB,EAAaqB,MAGpD,wCAAcpB","file":"static/js/3.00d3eca8.chunk.js","sourcesContent":["// Нужно написать функцию, которая проверяет, являются ли две строки анаграммами, причем регистр букв не имеет значения.\r\n// Учитываются лишь символы; пробелы или знаки препинания в расчет не берутся.\r\n// finder and Friend\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Anagram = () => {\r\n  const [inputVal, setInputVal] = useState<string>(\"finder\");\r\n  const [inputVal2, setInputVal2] = useState<string>(\"Friend\");\r\n  const [result, setResult] = useState<string>(\"Friend\");\r\n\r\n  useEffect(() => {\r\n    anagram(inputVal, inputVal2);\r\n  }, [inputVal, inputVal2]);\r\n\r\n  const anagram = (string1: string, string2: string) => {\r\n    const str1: Array<string> = string1\r\n      .replace(/[^\\w]/g, \"\")\r\n      .toLowerCase()\r\n      .split(\"\");\r\n    const str2: Array<string> = string2\r\n      .replace(/[^\\w]/g, \"\")\r\n      .toLowerCase()\r\n      .split(\"\");\r\n\r\n    if (str1.length !== str2.length) {\r\n      setResult(\"Нет, это не анаграма\");\r\n      return;\r\n    }\r\n\r\n    const first = str1.filter((i) => str2.includes(i)).length === str1.length;\r\n    const second = str2.filter((i) => str1.includes(i)).length === str2.length;\r\n\r\n    first && second\r\n      ? setResult(\"Да, это анаграма\")\r\n      : setResult(\"Нет, это не анаграма\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Anagram\">\r\n      <h3>Anagram</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"first\"\r\n        value={inputVal}\r\n        onChange={({ target: { value } }) => setInputVal(value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"second\"\r\n        value={inputVal2}\r\n        onChange={({ target: { value } }) => setInputVal2(value)}\r\n      />\r\n\r\n      <div>Result: {result}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Anagram;\r\n"],"sourceRoot":""}