{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/English/English.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","English","useState","words","setWords","useEffect","getWord","JSON","parse","localStorage","getItem","setItem","stringify","map","item","key","onClick","word","filter"],"mappings":"+HAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,2GIIe,SAASC,IAAW,IAAD,EACNC,mBAAwB,IADlB,mBACzBC,EADyB,KAClBC,EADkB,KAGhCC,qBAAU,WACR,IAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IAC5DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUT,MAC5C,CAACA,IAQJ,OACE,6BACE,uCACA,4BACGA,EAAMU,KAAI,SAACC,EAAMpC,GAAP,OACT,wBAAIqC,IAAG,UAAKrC,EAAL,YAAUoC,IACdpC,EAAI,EADP,MACaoC,EACX,4BAAQE,QAAS,kBAbLC,EAawBH,OAV5CV,EAFoBD,EAECe,QAAO,SAAAJ,GAAI,OAAIA,IAASG,MAH1B,IAACA,IAaZ","file":"static/js/5.d5e591f3.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from \"react\";\r\n// import { words1000 } from \"./words\";\r\n// localStorage.setItem('w1000', JSON.stringify(words1000));\r\n\r\nexport default function English() {\r\n  const [words, setWords] = useState<Array<string>>([]);\r\n\r\n  useEffect(() => {\r\n    const getWord = JSON.parse(localStorage.getItem('w1000') || '');\r\n    setWords(getWord)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('w1000', JSON.stringify(words));\r\n  }, [words])\r\n\r\n  const onRemoveWord = (word: string) => {\r\n    const copyArrWord = words;\r\n    ;\r\n    setWords(copyArrWord.filter(item => item !== word));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>English</h1>\r\n      <ul>\r\n        {words.map((item, i) => (\r\n          <li key={`${i}-${item}`}>\r\n            {i + 1} - {item}\r\n            <button onClick={() => onRemoveWord(item)}>Del</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}